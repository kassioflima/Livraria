@if (Livro is not null)
{
    <EditForm Enhance="true" method="post" FormName="LivroForm" OnValidSubmit="EditaAdicionaLivro" Model="Livro" id="EditaAdicionaLivro">

        <h3>@Cabecalho</h3>

        @if (ModoEdicao)
        {
            <input type="hidden" name="Livro.LivroId" value="@Livro.LivroId" />
        }

        <div class="mb-3">
            <label for="titulo" class="form-label">Titulo</label>
            <InputText id="titulo" @bind-Value="Livro.Titulo" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="autor" class="form-label">Autor</label>
            <InputText id="autor" @bind-Value="Livro.Autor" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="lancamento" class="form-label">Lancamento</label>
            <InputDate id="lancamento" @bind-Value="Livro.Lancamento" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="editora" class="form-label">Editora</label>
            <InputSelect id="editora" @bind-Value="Livro.EditoraId" class="form-control">
                <option value="0">
                    Selecione a Editora
                </option>
                @foreach (var editora in Editoras)
                {
                    <option value="@editora.EditoraId">
                        @editora.Nome
                    </option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label for="capa" class="form-label">Capa</label>
            <InputText id="capa" @bind-Value="Livro.Capa" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="categoria" class="form-label">Categoria</label>
            <InputSelect id="categoria" @bind-Value="Livro.CategoriaId" class="form-control">
                <option value="0">
                    Selecione a Categoria
                </option>
                @foreach (var categoria in Categorias)
                {
                    <option value="@categoria.CategoriaId">
                        @categoria.Descricao
                    </option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label for="situacao" class="form-label">Editora</label>
            <InputSelect id="situacao" @bind-Value="Livro.Situacao" class="form-control">
                <option value="0">
                    Selecione
                </option>
                @foreach (var situacao in Enum.GetValues(typeof(ESituacao)))
                {
                    <option value="@situacao">
                        @situacao.ToString()
                    </option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <button class="btn btn-primary">
                Enviar
            </button>
            <a href="/livros" class="btn btn-secondary ms-3" data-enhance-nav="false">
                Retornar para livros
            </a>
        </div>


        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
}


@code {
    [Parameter]
    public bool ModoEdicao { get; set; } = false;

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    //informar o componente Pai que o Form foi enviado
    public EventCallback<LivroDto> OnValidaLivroSubmit { get; set; }

    [SupplyParameterFromForm(FormName = "LivroForm")]
    public LivroDto? Livro { get; set; }

    private string Cabecalho => ModoEdicao ? $"Editar Livro {Id}" : "Novo Livro";

    private IEnumerable<EditoraDto> Editoras = new List<EditoraDto>();
    private IEnumerable<CategoriaDto> Categorias = new List<CategoriaDto>();

    protected override async Task OnInitializedAsync()
    {
        if (ModoEdicao)
            Livro ??= await livroQuery.ObterAsync(Id);
        else
            Livro ??= new LivroDto();

        Categorias = await categoriaQuery.ObterAsync();
        Editoras = await editoraQuery.ObterAsync();
    }

    private async Task EditaAdicionaLivro()
    {
        await OnValidaLivroSubmit.InvokeAsync(Livro);
    }

}
